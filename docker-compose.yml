version: '3.9'

volumes:
  pg_data:

services:
  sqs:
    container_name: sqs
    image: softwaremill/elasticmq-native
    ports:
      - 9324:9324
      - 9325:9325

  api_db:
    container_name: api_db
    image: postgis/postgis:13-3.2-alpine
    volumes:
      - pg_data:/var/lib/postgresql/data
      # copy the sql script to create db/tables
      - ./sql/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    restart: always
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 1s
      retries: 10

  api_service:
    container_name: api_service
    build:
        context: ./src
        dockerfile: ./Dockerfile
    image: wcs/mermaid-api:latest
    ports:
      - 8081:8081
    environment:
      # db
      DB_NAME: mermaid
      DB_HOST: api_db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres

      # Auth0
      MERMAID_DOMAIN: datamermaid.auth0.com
      MERMAID_API_AUDIENCE: https://dev-api.datamermaid.org
      AUTH0_MANAGEMENT_API_AUDIENCE: https://datamermaid.auth0.com/api/v2/

      # django
      ENV: local
      RESTORE: local
      BACKUP: local
      DEBUG: "True"
      ALLOWED_HOSTS: "*"
      SUPERUSER: me@mydomain.com
      ADMINS: me@mydomain.com

      DEFAULT_DOMAIN_API: api_service
      DEFAULT_DOMAIN_COLLECT: localhost:8888
      
      DRF_RECAPTCHA_TESTING: "True"

      # smtp
      EMAIL_HOST: smtp.gmail.com
      EMAIL_PORT: 587
      EMAIL_HOST_USER: me@mydomain.com 

      # AWS
      AWS_REGION: us-east-1
      AWS_BACKUP_BUCKET: mermaid-db-backups

    env_file:
      - .secrets.env
    depends_on:
      api_db:
        condition: service_healthy
      sqs:
        condition: service_started

    # healthcheck:
    #   test: curl --fail http://localhost:8081/health/ || exit 1
    #   interval: 60s
    #   retries: 5
    #   start_period: 20s
    #   timeout: 10s

