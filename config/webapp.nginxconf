upstream webapp_server {
  server unix:/var/run/webapp/gunicorn.sock fail_timeout=0;
}

server {
    listen   80 default_server;
    #server_name    webapp.com;
    client_max_body_size    100M;
    client_body_buffer_size 16k;
    proxy_connect_timeout   300;
    proxy_send_timeout      300;
    proxy_read_timeout      300;
    send_timeout            300;
    client_body_timeout     300;
    keepalive_timeout       300;
    access_log /var/log/webapp/nginx-access.log;
    error_log  /var/log/webapp/nginx-error.log;

    # the static dir auto-populated with the media of django apps
    location /static/ {
        alias    /var/projects/webapp/static/;
    }

    location / {
        # an HTTP header important enough to have its own Wikipedia entry:
        #   http://en.wikipedia.org/wiki/X-Forwarded-For
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # enable this if and only if you use HTTPS, this helps Rack
        # set the proper protocol for doing redirects:
        # proxy_set_header X-Forwarded-Proto https;

        # pass the Host: header from the client right along so redirects
        # can be set properly within the Rack application
        proxy_set_header Host $http_host;

        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;

        # Try to serve static files from nginx, no point in making an
        # *application* server like Unicorn/Rainbows! serve static files.
        if (!-f $request_filename) {
            proxy_pass http://webapp_server;
            break;
        }
    }
}