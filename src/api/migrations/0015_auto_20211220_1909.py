# Generated by Django 2.2.24 on 2021-12-20 19:09

from django.db import migrations
from django.utils import timezone

from api.models import (
    CollectRecord,
    FISHBELT_PROTOCOL,
    BLEACHINGQC_PROTOCOL,
    BENTHICLIT_PROTOCOL,
    BENTHICPIT_PROTOCOL,
    HABITATCOMPLEXITY_PROTOCOL,
)


def update_record(record):
    protocol = record.protocol
    obs_keys = []
    if protocol == FISHBELT_PROTOCOL:
        obs_keys = ["obs_belt_fishes"]
    elif protocol == BLEACHINGQC_PROTOCOL:
        obs_keys = ["obs_colonies_bleached", "obs_quadrat_benthic_percent"]
    elif protocol == BENTHICLIT_PROTOCOL:
        obs_keys = ["obs_benthic_lits"]
    elif protocol == BENTHICPIT_PROTOCOL:
        obs_keys = ["obs_benthic_pits"]
    elif protocol == HABITATCOMPLEXITY_PROTOCOL:
        obs_keys = ["obs_habitat_complexities"]

    for obs_key in obs_keys:
        record.data[obs_key] = [
            record._assign_id(r) for r in record.data.get(obs_key) or []
        ]

    record.updated_on = timezone.now()
    record.updated_by = None
    return record


def assign_observation_ids(*args, **kwargs):
    records = [update_record(r) for r in CollectRecord.objects.all()]
    CollectRecord.objects.bulk_update(records, ["data", "updated_on", "updated_by"])


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0014_auto_20211209_2006"),
    ]

    operations = [
        migrations.RunPython(assign_observation_ids, migrations.RunPython.noop)
    ]
