# Generated by Django 2.2.3 on 2019-11-13 06:27

from django.db import migrations


def forward_code(apps, schema_editor):
    BeltTransectWidth = apps.get_model("api", "BeltTransectWidth")
    BeltTransectWidthCondition = apps.get_model("api", "BeltTransectWidthCondition")

    if BeltTransectWidth is None or BeltTransectWidthCondition is None:
        print("BeltTransectWidth or BeltTransectWidthCondition model do not exist")
        return

    for width in BeltTransectWidth.objects.all():
        val = width.val
        BeltTransectWidthCondition.objects.get_or_create(
            belttransectwidth=width, val=val
        )


def reverse_code(apps, schema_editor):
    BeltTransectWidth = apps.get_model("api", "BeltTransectWidth")
    BeltTransectWidthCondition = apps.get_model("api", "BeltTransectWidthCondition")

    if BeltTransectWidth is None or BeltTransectWidthCondition is None:
        print("BeltTransectWidth or BeltTransectWidthCondition model do not exist")
        return

    for condition in BeltTransectWidthCondition.objects.all():
        width = condition.belttransectwidth
        if width.val is not None:
            continue
        width.val = condition.val
        width.save()


class Migration(migrations.Migration):

    dependencies = [("api", "0009_auto_20191113_0615")]

    operations = [
        migrations.RunPython(forward_code, reverse_code)
    ]
