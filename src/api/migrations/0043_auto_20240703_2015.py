# Generated by Django 3.2.20 on 2024-07-03 20:15

import uuid

import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.db import migrations, models

import api.models.classification


class Migration(migrations.Migration):
    dependencies = [
        ("api", "0042_merge_0041_auto_20240612_2051_0041_auto_20240613_1200"),
    ]

    operations = [
        migrations.CreateModel(
            name="Image",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("collect_record_id", models.UUIDField()),
                (
                    "image",
                    models.ImageField(
                        storage=api.models.classification.select_image_storage, upload_to=""
                    ),
                ),
                (
                    "thumbnail",
                    models.ImageField(
                        blank=True,
                        null=True,
                        storage=api.models.classification.select_image_storage,
                        upload_to="",
                    ),
                ),
                (
                    "name",
                    models.CharField(blank=True, max_length=200, null=True, verbose_name="Name"),
                ),
                ("photo_date", models.DateField(blank=True, null=True)),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=4326
                    ),
                ),
                ("depth", models.FloatField(blank=True, null=True)),
                ("camera", models.CharField(blank=True, max_length=200, null=True)),
                ("photographer", models.CharField(blank=True, max_length=45, null=True)),
                ("water_quality", models.CharField(blank=True, max_length=45, null=True)),
                ("strobes", models.CharField(blank=True, max_length=200, null=True)),
                ("framing", models.CharField(blank=True, max_length=200, null=True)),
                ("balance", models.CharField(blank=True, max_length=200, null=True)),
                ("comments", models.TextField(blank=True, max_length=1000, null=True)),
                ("data", models.JSONField(blank=True, null=True, verbose_name="Data")),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="image_created_by",
                        to="api.profile",
                    ),
                ),
                (
                    "observation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.obsbenthicphotoquadrat",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="image_updated_by",
                        to="api.profile",
                    ),
                ),
            ],
            options={
                "db_table": "class_image",
            },
        ),
        migrations.CreateModel(
            name="Point",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("row", models.IntegerField()),
                ("column", models.IntegerField()),
                ("point_number", models.IntegerField()),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="point_created_by",
                        to="api.profile",
                    ),
                ),
                (
                    "image",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="points",
                        to="api.image",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="point_updated_by",
                        to="api.profile",
                    ),
                ),
            ],
            options={
                "db_table": "class_point",
            },
        ),
        migrations.CreateModel(
            name="Label",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "benthic_attribute",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="labels",
                        to="api.benthicattribute",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="label_created_by",
                        to="api.profile",
                    ),
                ),
                (
                    "growth_form",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="labels",
                        to="api.growthform",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="label_updated_by",
                        to="api.profile",
                    ),
                ),
            ],
            options={
                "db_table": "class_label",
                "unique_together": {("benthic_attribute", "growth_form")},
            },
        ),
        migrations.CreateModel(
            name="Classifier",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=50)),
                ("version", models.CharField(max_length=11)),
                ("patch_size", models.IntegerField(help_text="Number of pixels")),
                ("num_points", models.IntegerField(default=25)),
                ("description", models.TextField(blank=True, max_length=1000)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="classifier_created_by",
                        to="api.profile",
                    ),
                ),
                ("labels", models.ManyToManyField(related_name="classifiers", to="api.Label")),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="classifier_updated_by",
                        to="api.profile",
                    ),
                ),
            ],
            options={
                "db_table": "class_classifier",
            },
        ),
        migrations.CreateModel(
            name="ClassificationStatus",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "status",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Uknown"),
                            (1, "Pending"),
                            (2, "Running"),
                            (3, "Completed"),
                            (4, "Failed"),
                        ],
                        default=0,
                    ),
                ),
                ("message", models.TextField(blank=True, null=True)),
                ("data", models.JSONField(blank=True, null=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="classificationstatus_created_by",
                        to="api.profile",
                    ),
                ),
                (
                    "image",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="statuses",
                        to="api.image",
                    ),
                ),
            ],
            options={
                "db_table": "class_status",
            },
        ),
        migrations.CreateModel(
            name="Annotation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("score", models.PositiveSmallIntegerField(default=0)),
                ("is_confirmed", models.BooleanField(default=False)),
                (
                    "classifier",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="annotations",
                        to="api.classifier",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="annotation_created_by",
                        to="api.profile",
                    ),
                ),
                (
                    "label",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="annotations",
                        to="api.label",
                    ),
                ),
                (
                    "point",
                    models.ForeignKey(
                        editable=False, on_delete=django.db.models.deletion.CASCADE, to="api.point"
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="annotation_updated_by",
                        to="api.profile",
                    ),
                ),
            ],
            options={
                "db_table": "class_annotation",
            },
        ),
        migrations.AddIndex(
            model_name="annotation",
            index=models.Index(
                condition=models.Q(("is_confirmed", True)),
                fields=["point", "label"],
                name="unq_conf_anno_idx",
            ),
        ),
    ]
