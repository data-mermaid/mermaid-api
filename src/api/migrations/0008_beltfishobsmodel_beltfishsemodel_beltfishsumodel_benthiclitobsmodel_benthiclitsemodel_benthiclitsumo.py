# Generated by Django 3.2.16 on 2023-02-06 14:00

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0007_merge_20230111_2108'),
    ]

    operations = [
        migrations.CreateModel(
            name='BeltFishObsModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('project_id', models.UUIDField()),
                ('project_name', models.CharField(max_length=255)),
                ('project_status', models.PositiveSmallIntegerField(choices=[(90, 'open'), (80, 'test'), (10, 'locked')], default=90)),
                ('project_notes', models.TextField(blank=True)),
                ('contact_link', models.CharField(max_length=255)),
                ('tags', models.JSONField(blank=True, null=True)),
                ('site_id', models.UUIDField()),
                ('site_name', models.CharField(max_length=255)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('site_notes', models.TextField(blank=True)),
                ('country_id', models.UUIDField()),
                ('country_name', models.CharField(max_length=50)),
                ('reef_type', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_zone', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_exposure', models.CharField(blank=True, max_length=50, null=True)),
                ('management_id', models.UUIDField()),
                ('management_name', models.CharField(max_length=255)),
                ('management_name_secondary', models.CharField(blank=True, max_length=255, null=True)),
                ('management_est_year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('management_size', models.DecimalField(blank=True, decimal_places=3, max_digits=12, null=True, verbose_name='Size (ha)')),
                ('management_parties', models.JSONField(blank=True, null=True)),
                ('management_compliance', models.CharField(blank=True, max_length=100, null=True)),
                ('management_rules', models.JSONField(blank=True, null=True)),
                ('management_notes', models.TextField(blank=True)),
                ('sample_date', models.DateField()),
                ('sample_event_id', models.UUIDField()),
                ('sample_event_notes', models.TextField(blank=True)),
                ('covariates', models.JSONField(blank=True, null=True)),
                ('label', models.CharField(blank=True, max_length=50)),
                ('relative_depth', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_time', models.TimeField(blank=True, null=True)),
                ('observers', models.JSONField(blank=True, null=True)),
                ('current_name', models.CharField(blank=True, max_length=50, null=True)),
                ('tide_name', models.CharField(blank=True, max_length=50, null=True)),
                ('visibility_name', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_unit_notes', models.TextField(blank=True)),
                ('depth', models.DecimalField(decimal_places=1, max_digits=3, verbose_name='depth (m)')),
                ('sample_unit_id', models.UUIDField()),
                ('transect_number', models.PositiveSmallIntegerField()),
                ('transect_len_surveyed', models.PositiveSmallIntegerField(verbose_name='transect length surveyed (m)')),
                ('transect_width_name', models.CharField(blank=True, max_length=100, null=True)),
                ('reef_slope', models.CharField(blank=True, max_length=50, null=True)),
                ('fish_family', models.CharField(blank=True, max_length=100, null=True)),
                ('fish_genus', models.CharField(blank=True, max_length=100, null=True)),
                ('fish_taxon', models.CharField(blank=True, max_length=100, null=True)),
                ('trophic_group', models.CharField(blank=True, max_length=100, null=True)),
                ('trophic_level', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('functional_group', models.CharField(blank=True, max_length=100, null=True)),
                ('vulnerability', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('biomass_constant_a', models.DecimalField(blank=True, decimal_places=6, max_digits=7, null=True)),
                ('biomass_constant_b', models.DecimalField(blank=True, decimal_places=6, max_digits=7, null=True)),
                ('biomass_constant_c', models.DecimalField(blank=True, decimal_places=6, default=1, max_digits=7, null=True)),
                ('size_bin', models.CharField(max_length=100)),
                ('size', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True, verbose_name='size (cm)')),
                ('count', models.PositiveIntegerField(blank=True, default=1, null=True)),
                ('biomass_kgha', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='biomass (kg/ha)')),
                ('observation_notes', models.TextField(blank=True)),
                ('data_policy_beltfish', models.CharField(max_length=50)),
                ('pseudosu_id', models.UUIDField()),
            ],
            options={
                'db_table': 'summary_belt_fish_obs',
            },
        ),
        migrations.CreateModel(
            name='BeltFishSEModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('project_id', models.UUIDField()),
                ('project_name', models.CharField(max_length=255)),
                ('project_status', models.PositiveSmallIntegerField(choices=[(90, 'open'), (80, 'test'), (10, 'locked')], default=90)),
                ('project_notes', models.TextField(blank=True)),
                ('contact_link', models.CharField(max_length=255)),
                ('tags', models.JSONField(blank=True, null=True)),
                ('site_id', models.UUIDField()),
                ('site_name', models.CharField(max_length=255)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('site_notes', models.TextField(blank=True)),
                ('country_id', models.UUIDField()),
                ('country_name', models.CharField(max_length=50)),
                ('reef_type', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_zone', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_exposure', models.CharField(blank=True, max_length=50, null=True)),
                ('management_id', models.UUIDField()),
                ('management_name', models.CharField(max_length=255)),
                ('management_name_secondary', models.CharField(blank=True, max_length=255, null=True)),
                ('management_est_year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('management_size', models.DecimalField(blank=True, decimal_places=3, max_digits=12, null=True, verbose_name='Size (ha)')),
                ('management_parties', models.JSONField(blank=True, null=True)),
                ('management_compliance', models.CharField(blank=True, max_length=100, null=True)),
                ('management_rules', models.JSONField(blank=True, null=True)),
                ('management_notes', models.TextField(blank=True)),
                ('sample_date', models.DateField()),
                ('sample_event_id', models.UUIDField()),
                ('sample_event_notes', models.TextField(blank=True)),
                ('covariates', models.JSONField(blank=True, null=True)),
                ('sample_unit_count', models.PositiveSmallIntegerField()),
                ('depth_avg', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='depth (m)')),
                ('current_name', models.CharField(blank=True, max_length=100, null=True)),
                ('tide_name', models.CharField(blank=True, max_length=100, null=True)),
                ('visibility_name', models.CharField(blank=True, max_length=100, null=True)),
                ('biomass_kgha_avg', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='biomass (kg/ha)')),
                ('biomass_kgha_by_trophic_group_avg', models.JSONField(blank=True, null=True)),
                ('biomass_kgha_by_fish_family_avg', models.JSONField(blank=True, null=True)),
                ('data_policy_beltfish', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'summary_belt_fish_se',
            },
        ),
        migrations.CreateModel(
            name='BeltFishSUModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('project_id', models.UUIDField()),
                ('project_name', models.CharField(max_length=255)),
                ('project_status', models.PositiveSmallIntegerField(choices=[(90, 'open'), (80, 'test'), (10, 'locked')], default=90)),
                ('project_notes', models.TextField(blank=True)),
                ('contact_link', models.CharField(max_length=255)),
                ('tags', models.JSONField(blank=True, null=True)),
                ('site_id', models.UUIDField()),
                ('site_name', models.CharField(max_length=255)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('site_notes', models.TextField(blank=True)),
                ('country_id', models.UUIDField()),
                ('country_name', models.CharField(max_length=50)),
                ('reef_type', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_zone', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_exposure', models.CharField(blank=True, max_length=50, null=True)),
                ('management_id', models.UUIDField()),
                ('management_name', models.CharField(max_length=255)),
                ('management_name_secondary', models.CharField(blank=True, max_length=255, null=True)),
                ('management_est_year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('management_size', models.DecimalField(blank=True, decimal_places=3, max_digits=12, null=True, verbose_name='Size (ha)')),
                ('management_parties', models.JSONField(blank=True, null=True)),
                ('management_compliance', models.CharField(blank=True, max_length=100, null=True)),
                ('management_rules', models.JSONField(blank=True, null=True)),
                ('management_notes', models.TextField(blank=True)),
                ('sample_date', models.DateField()),
                ('sample_event_id', models.UUIDField()),
                ('sample_event_notes', models.TextField(blank=True)),
                ('covariates', models.JSONField(blank=True, null=True)),
                ('label', models.CharField(blank=True, max_length=50)),
                ('relative_depth', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_time', models.TimeField(blank=True, null=True)),
                ('observers', models.JSONField(blank=True, null=True)),
                ('current_name', models.CharField(blank=True, max_length=50, null=True)),
                ('tide_name', models.CharField(blank=True, max_length=50, null=True)),
                ('visibility_name', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_unit_notes', models.TextField(blank=True)),
                ('depth', models.DecimalField(decimal_places=1, max_digits=3, verbose_name='depth (m)')),
                ('sample_unit_ids', models.JSONField()),
                ('total_abundance', models.PositiveIntegerField()),
                ('transect_number', models.PositiveSmallIntegerField()),
                ('transect_len_surveyed', models.PositiveSmallIntegerField(verbose_name='transect length surveyed (m)')),
                ('transect_width_name', models.CharField(blank=True, max_length=100, null=True)),
                ('reef_slope', models.CharField(blank=True, max_length=50, null=True)),
                ('size_bin', models.CharField(max_length=100)),
                ('biomass_kgha', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='biomass (kg/ha)')),
                ('biomass_kgha_by_trophic_group', models.JSONField(blank=True, null=True)),
                ('biomass_kgha_by_fish_family', models.JSONField(blank=True, null=True)),
                ('data_policy_beltfish', models.CharField(max_length=50)),
                ('pseudosu_id', models.UUIDField()),
                ('biomass_kgha_by_trophic_group_zeroes', models.JSONField(blank=True, null=True)),
                ('biomass_kgha_by_fish_family_zeroes', models.JSONField(blank=True, null=True)),
            ],
            options={
                'db_table': 'summary_belt_fish_su',
            },
        ),
        migrations.CreateModel(
            name='BenthicLITObsModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('project_id', models.UUIDField()),
                ('project_name', models.CharField(max_length=255)),
                ('project_status', models.PositiveSmallIntegerField(choices=[(90, 'open'), (80, 'test'), (10, 'locked')], default=90)),
                ('project_notes', models.TextField(blank=True)),
                ('contact_link', models.CharField(max_length=255)),
                ('tags', models.JSONField(blank=True, null=True)),
                ('site_id', models.UUIDField()),
                ('site_name', models.CharField(max_length=255)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('site_notes', models.TextField(blank=True)),
                ('country_id', models.UUIDField()),
                ('country_name', models.CharField(max_length=50)),
                ('reef_type', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_zone', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_exposure', models.CharField(blank=True, max_length=50, null=True)),
                ('management_id', models.UUIDField()),
                ('management_name', models.CharField(max_length=255)),
                ('management_name_secondary', models.CharField(blank=True, max_length=255, null=True)),
                ('management_est_year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('management_size', models.DecimalField(blank=True, decimal_places=3, max_digits=12, null=True, verbose_name='Size (ha)')),
                ('management_parties', models.JSONField(blank=True, null=True)),
                ('management_compliance', models.CharField(blank=True, max_length=100, null=True)),
                ('management_rules', models.JSONField(blank=True, null=True)),
                ('management_notes', models.TextField(blank=True)),
                ('sample_date', models.DateField()),
                ('sample_event_id', models.UUIDField()),
                ('sample_event_notes', models.TextField(blank=True)),
                ('covariates', models.JSONField(blank=True, null=True)),
                ('label', models.CharField(blank=True, max_length=50)),
                ('sample_time', models.TimeField(blank=True, null=True)),
                ('observers', models.JSONField(blank=True, null=True)),
                ('current_name', models.CharField(blank=True, max_length=50, null=True)),
                ('tide_name', models.CharField(blank=True, max_length=50, null=True)),
                ('visibility_name', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_unit_notes', models.TextField(blank=True)),
                ('depth', models.DecimalField(decimal_places=1, max_digits=3, verbose_name='depth (m)')),
                ('sample_unit_id', models.UUIDField()),
                ('transect_number', models.PositiveSmallIntegerField()),
                ('relative_depth', models.CharField(blank=True, max_length=50, null=True)),
                ('transect_len_surveyed', models.PositiveSmallIntegerField(verbose_name='transect length surveyed (m)')),
                ('reef_slope', models.CharField(blank=True, max_length=50, null=True)),
                ('length', models.PositiveSmallIntegerField()),
                ('total_length', models.PositiveIntegerField()),
                ('benthic_category', models.CharField(blank=True, max_length=100, null=True)),
                ('benthic_attribute', models.CharField(blank=True, max_length=100, null=True)),
                ('growth_form', models.CharField(blank=True, max_length=100, null=True)),
                ('observation_notes', models.TextField(blank=True)),
                ('data_policy_benthiclit', models.CharField(max_length=50)),
                ('pseudosu_id', models.UUIDField()),
            ],
            options={
                'db_table': 'summary_benthiclit_obs',
            },
        ),
        migrations.CreateModel(
            name='BenthicLITSEModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('project_id', models.UUIDField()),
                ('project_name', models.CharField(max_length=255)),
                ('project_status', models.PositiveSmallIntegerField(choices=[(90, 'open'), (80, 'test'), (10, 'locked')], default=90)),
                ('project_notes', models.TextField(blank=True)),
                ('contact_link', models.CharField(max_length=255)),
                ('tags', models.JSONField(blank=True, null=True)),
                ('site_id', models.UUIDField()),
                ('site_name', models.CharField(max_length=255)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('site_notes', models.TextField(blank=True)),
                ('country_id', models.UUIDField()),
                ('country_name', models.CharField(max_length=50)),
                ('reef_type', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_zone', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_exposure', models.CharField(blank=True, max_length=50, null=True)),
                ('management_id', models.UUIDField()),
                ('management_name', models.CharField(max_length=255)),
                ('management_name_secondary', models.CharField(blank=True, max_length=255, null=True)),
                ('management_est_year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('management_size', models.DecimalField(blank=True, decimal_places=3, max_digits=12, null=True, verbose_name='Size (ha)')),
                ('management_parties', models.JSONField(blank=True, null=True)),
                ('management_compliance', models.CharField(blank=True, max_length=100, null=True)),
                ('management_rules', models.JSONField(blank=True, null=True)),
                ('management_notes', models.TextField(blank=True)),
                ('sample_date', models.DateField()),
                ('sample_event_id', models.UUIDField()),
                ('sample_event_notes', models.TextField(blank=True)),
                ('covariates', models.JSONField(blank=True, null=True)),
                ('sample_unit_count', models.PositiveSmallIntegerField()),
                ('depth_avg', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='depth (m)')),
                ('current_name', models.CharField(blank=True, max_length=100, null=True)),
                ('tide_name', models.CharField(blank=True, max_length=100, null=True)),
                ('visibility_name', models.CharField(blank=True, max_length=100, null=True)),
                ('percent_cover_by_benthic_category_avg', models.JSONField(blank=True, null=True)),
                ('data_policy_benthiclit', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'summary_benthiclit_se',
            },
        ),
        migrations.CreateModel(
            name='BenthicLITSUModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('project_id', models.UUIDField()),
                ('project_name', models.CharField(max_length=255)),
                ('project_status', models.PositiveSmallIntegerField(choices=[(90, 'open'), (80, 'test'), (10, 'locked')], default=90)),
                ('project_notes', models.TextField(blank=True)),
                ('contact_link', models.CharField(max_length=255)),
                ('tags', models.JSONField(blank=True, null=True)),
                ('site_id', models.UUIDField()),
                ('site_name', models.CharField(max_length=255)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('site_notes', models.TextField(blank=True)),
                ('country_id', models.UUIDField()),
                ('country_name', models.CharField(max_length=50)),
                ('reef_type', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_zone', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_exposure', models.CharField(blank=True, max_length=50, null=True)),
                ('management_id', models.UUIDField()),
                ('management_name', models.CharField(max_length=255)),
                ('management_name_secondary', models.CharField(blank=True, max_length=255, null=True)),
                ('management_est_year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('management_size', models.DecimalField(blank=True, decimal_places=3, max_digits=12, null=True, verbose_name='Size (ha)')),
                ('management_parties', models.JSONField(blank=True, null=True)),
                ('management_compliance', models.CharField(blank=True, max_length=100, null=True)),
                ('management_rules', models.JSONField(blank=True, null=True)),
                ('management_notes', models.TextField(blank=True)),
                ('sample_date', models.DateField()),
                ('sample_event_id', models.UUIDField()),
                ('sample_event_notes', models.TextField(blank=True)),
                ('covariates', models.JSONField(blank=True, null=True)),
                ('label', models.CharField(blank=True, max_length=50)),
                ('relative_depth', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_time', models.TimeField(blank=True, null=True)),
                ('observers', models.JSONField(blank=True, null=True)),
                ('current_name', models.CharField(blank=True, max_length=50, null=True)),
                ('tide_name', models.CharField(blank=True, max_length=50, null=True)),
                ('visibility_name', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_unit_notes', models.TextField(blank=True)),
                ('depth', models.DecimalField(decimal_places=1, max_digits=3, verbose_name='depth (m)')),
                ('sample_unit_ids', models.JSONField()),
                ('transect_number', models.PositiveSmallIntegerField()),
                ('transect_len_surveyed', models.PositiveSmallIntegerField(verbose_name='transect length surveyed (m)')),
                ('total_length', models.PositiveIntegerField()),
                ('reef_slope', models.CharField(blank=True, max_length=50, null=True)),
                ('percent_cover_by_benthic_category', models.JSONField(blank=True, null=True)),
                ('data_policy_benthiclit', models.CharField(max_length=50)),
                ('pseudosu_id', models.UUIDField()),
            ],
            options={
                'db_table': 'summary_benthiclit_su',
            },
        ),
        migrations.CreateModel(
            name='BenthicPhotoQuadratTransectObsModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('project_id', models.UUIDField()),
                ('project_name', models.CharField(max_length=255)),
                ('project_status', models.PositiveSmallIntegerField(choices=[(90, 'open'), (80, 'test'), (10, 'locked')], default=90)),
                ('project_notes', models.TextField(blank=True)),
                ('contact_link', models.CharField(max_length=255)),
                ('tags', models.JSONField(blank=True, null=True)),
                ('site_id', models.UUIDField()),
                ('site_name', models.CharField(max_length=255)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('site_notes', models.TextField(blank=True)),
                ('country_id', models.UUIDField()),
                ('country_name', models.CharField(max_length=50)),
                ('reef_type', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_zone', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_exposure', models.CharField(blank=True, max_length=50, null=True)),
                ('management_id', models.UUIDField()),
                ('management_name', models.CharField(max_length=255)),
                ('management_name_secondary', models.CharField(blank=True, max_length=255, null=True)),
                ('management_est_year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('management_size', models.DecimalField(blank=True, decimal_places=3, max_digits=12, null=True, verbose_name='Size (ha)')),
                ('management_parties', models.JSONField(blank=True, null=True)),
                ('management_compliance', models.CharField(blank=True, max_length=100, null=True)),
                ('management_rules', models.JSONField(blank=True, null=True)),
                ('management_notes', models.TextField(blank=True)),
                ('sample_date', models.DateField()),
                ('sample_event_id', models.UUIDField()),
                ('sample_event_notes', models.TextField(blank=True)),
                ('covariates', models.JSONField(blank=True, null=True)),
                ('label', models.CharField(blank=True, max_length=50)),
                ('sample_time', models.TimeField(blank=True, null=True)),
                ('observers', models.JSONField(blank=True, null=True)),
                ('current_name', models.CharField(blank=True, max_length=50, null=True)),
                ('tide_name', models.CharField(blank=True, max_length=50, null=True)),
                ('visibility_name', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_unit_notes', models.TextField(blank=True)),
                ('depth', models.DecimalField(decimal_places=1, max_digits=3, verbose_name='depth (m)')),
                ('sample_unit_id', models.UUIDField()),
                ('transect_number', models.PositiveSmallIntegerField()),
                ('relative_depth', models.CharField(blank=True, max_length=50, null=True)),
                ('transect_len_surveyed', models.PositiveSmallIntegerField(verbose_name='transect length surveyed (m)')),
                ('quadrat_size', models.DecimalField(decimal_places=2, max_digits=6)),
                ('num_quadrats', models.PositiveSmallIntegerField()),
                ('num_points_per_quadrat', models.PositiveSmallIntegerField()),
                ('reef_slope', models.CharField(blank=True, max_length=50, null=True)),
                ('quadrat_number', models.PositiveSmallIntegerField(verbose_name='quadrat number')),
                ('benthic_category', models.CharField(blank=True, max_length=100, null=True)),
                ('benthic_attribute', models.CharField(blank=True, max_length=100, null=True)),
                ('growth_form', models.CharField(blank=True, max_length=100, null=True)),
                ('num_points', models.PositiveSmallIntegerField()),
                ('observation_notes', models.TextField(blank=True)),
                ('data_policy_benthicpqt', models.CharField(max_length=50)),
                ('pseudosu_id', models.UUIDField()),
            ],
            options={
                'db_table': 'summary_benthicpqt_obs',
            },
        ),
        migrations.CreateModel(
            name='BenthicPhotoQuadratTransectSEModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('project_id', models.UUIDField()),
                ('project_name', models.CharField(max_length=255)),
                ('project_status', models.PositiveSmallIntegerField(choices=[(90, 'open'), (80, 'test'), (10, 'locked')], default=90)),
                ('project_notes', models.TextField(blank=True)),
                ('contact_link', models.CharField(max_length=255)),
                ('tags', models.JSONField(blank=True, null=True)),
                ('site_id', models.UUIDField()),
                ('site_name', models.CharField(max_length=255)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('site_notes', models.TextField(blank=True)),
                ('country_id', models.UUIDField()),
                ('country_name', models.CharField(max_length=50)),
                ('reef_type', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_zone', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_exposure', models.CharField(blank=True, max_length=50, null=True)),
                ('management_id', models.UUIDField()),
                ('management_name', models.CharField(max_length=255)),
                ('management_name_secondary', models.CharField(blank=True, max_length=255, null=True)),
                ('management_est_year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('management_size', models.DecimalField(blank=True, decimal_places=3, max_digits=12, null=True, verbose_name='Size (ha)')),
                ('management_parties', models.JSONField(blank=True, null=True)),
                ('management_compliance', models.CharField(blank=True, max_length=100, null=True)),
                ('management_rules', models.JSONField(blank=True, null=True)),
                ('management_notes', models.TextField(blank=True)),
                ('sample_date', models.DateField()),
                ('sample_event_id', models.UUIDField()),
                ('sample_event_notes', models.TextField(blank=True)),
                ('covariates', models.JSONField(blank=True, null=True)),
                ('sample_unit_count', models.PositiveSmallIntegerField()),
                ('depth_avg', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='depth (m)')),
                ('current_name', models.CharField(blank=True, max_length=100, null=True)),
                ('tide_name', models.CharField(blank=True, max_length=100, null=True)),
                ('visibility_name', models.CharField(blank=True, max_length=100, null=True)),
                ('percent_cover_by_benthic_category_avg', models.JSONField(blank=True, null=True)),
                ('data_policy_benthicpqt', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'summary_benthicpqt_se',
            },
        ),
        migrations.CreateModel(
            name='BenthicPhotoQuadratTransectSUModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('project_id', models.UUIDField()),
                ('project_name', models.CharField(max_length=255)),
                ('project_status', models.PositiveSmallIntegerField(choices=[(90, 'open'), (80, 'test'), (10, 'locked')], default=90)),
                ('project_notes', models.TextField(blank=True)),
                ('contact_link', models.CharField(max_length=255)),
                ('tags', models.JSONField(blank=True, null=True)),
                ('site_id', models.UUIDField()),
                ('site_name', models.CharField(max_length=255)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('site_notes', models.TextField(blank=True)),
                ('country_id', models.UUIDField()),
                ('country_name', models.CharField(max_length=50)),
                ('reef_type', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_zone', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_exposure', models.CharField(blank=True, max_length=50, null=True)),
                ('management_id', models.UUIDField()),
                ('management_name', models.CharField(max_length=255)),
                ('management_name_secondary', models.CharField(blank=True, max_length=255, null=True)),
                ('management_est_year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('management_size', models.DecimalField(blank=True, decimal_places=3, max_digits=12, null=True, verbose_name='Size (ha)')),
                ('management_parties', models.JSONField(blank=True, null=True)),
                ('management_compliance', models.CharField(blank=True, max_length=100, null=True)),
                ('management_rules', models.JSONField(blank=True, null=True)),
                ('management_notes', models.TextField(blank=True)),
                ('sample_date', models.DateField()),
                ('sample_event_id', models.UUIDField()),
                ('sample_event_notes', models.TextField(blank=True)),
                ('covariates', models.JSONField(blank=True, null=True)),
                ('label', models.CharField(blank=True, max_length=50)),
                ('relative_depth', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_time', models.TimeField(blank=True, null=True)),
                ('observers', models.JSONField(blank=True, null=True)),
                ('current_name', models.CharField(blank=True, max_length=50, null=True)),
                ('tide_name', models.CharField(blank=True, max_length=50, null=True)),
                ('visibility_name', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_unit_notes', models.TextField(blank=True)),
                ('depth', models.DecimalField(decimal_places=1, max_digits=3, verbose_name='depth (m)')),
                ('sample_unit_ids', models.JSONField()),
                ('transect_number', models.PositiveSmallIntegerField()),
                ('transect_len_surveyed', models.PositiveSmallIntegerField(verbose_name='transect length surveyed (m)')),
                ('reef_slope', models.CharField(blank=True, max_length=50, null=True)),
                ('percent_cover_by_benthic_category', models.JSONField(blank=True, null=True)),
                ('data_policy_benthicpqt', models.CharField(max_length=50)),
                ('pseudosu_id', models.UUIDField()),
            ],
            options={
                'db_table': 'summary_benthicpqt_su',
            },
        ),
        migrations.CreateModel(
            name='BenthicPITObsModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('project_id', models.UUIDField()),
                ('project_name', models.CharField(max_length=255)),
                ('project_status', models.PositiveSmallIntegerField(choices=[(90, 'open'), (80, 'test'), (10, 'locked')], default=90)),
                ('project_notes', models.TextField(blank=True)),
                ('contact_link', models.CharField(max_length=255)),
                ('tags', models.JSONField(blank=True, null=True)),
                ('site_id', models.UUIDField()),
                ('site_name', models.CharField(max_length=255)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('site_notes', models.TextField(blank=True)),
                ('country_id', models.UUIDField()),
                ('country_name', models.CharField(max_length=50)),
                ('reef_type', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_zone', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_exposure', models.CharField(blank=True, max_length=50, null=True)),
                ('management_id', models.UUIDField()),
                ('management_name', models.CharField(max_length=255)),
                ('management_name_secondary', models.CharField(blank=True, max_length=255, null=True)),
                ('management_est_year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('management_size', models.DecimalField(blank=True, decimal_places=3, max_digits=12, null=True, verbose_name='Size (ha)')),
                ('management_parties', models.JSONField(blank=True, null=True)),
                ('management_compliance', models.CharField(blank=True, max_length=100, null=True)),
                ('management_rules', models.JSONField(blank=True, null=True)),
                ('management_notes', models.TextField(blank=True)),
                ('sample_date', models.DateField()),
                ('sample_event_id', models.UUIDField()),
                ('sample_event_notes', models.TextField(blank=True)),
                ('covariates', models.JSONField(blank=True, null=True)),
                ('label', models.CharField(blank=True, max_length=50)),
                ('relative_depth', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_time', models.TimeField(blank=True, null=True)),
                ('observers', models.JSONField(blank=True, null=True)),
                ('current_name', models.CharField(blank=True, max_length=50, null=True)),
                ('tide_name', models.CharField(blank=True, max_length=50, null=True)),
                ('visibility_name', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_unit_notes', models.TextField(blank=True)),
                ('depth', models.DecimalField(decimal_places=1, max_digits=3, verbose_name='depth (m)')),
                ('sample_unit_id', models.UUIDField()),
                ('transect_number', models.PositiveSmallIntegerField()),
                ('transect_len_surveyed', models.PositiveSmallIntegerField(verbose_name='transect length surveyed (m)')),
                ('reef_slope', models.CharField(blank=True, max_length=50, null=True)),
                ('interval_size', models.DecimalField(decimal_places=2, default=0.5, max_digits=4, verbose_name='interval size (m)')),
                ('interval_start', models.DecimalField(decimal_places=2, default=0.5, max_digits=4, verbose_name='interval start (m)')),
                ('interval', models.DecimalField(decimal_places=2, max_digits=7)),
                ('benthic_category', models.CharField(blank=True, max_length=100, null=True)),
                ('benthic_attribute', models.CharField(blank=True, max_length=100, null=True)),
                ('growth_form', models.CharField(blank=True, max_length=100, null=True)),
                ('observation_notes', models.TextField(blank=True)),
                ('data_policy_benthicpit', models.CharField(max_length=50)),
                ('pseudosu_id', models.UUIDField()),
            ],
            options={
                'db_table': 'summary_benthicpit_obs',
            },
        ),
        migrations.CreateModel(
            name='BenthicPITSEModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('project_id', models.UUIDField()),
                ('project_name', models.CharField(max_length=255)),
                ('project_status', models.PositiveSmallIntegerField(choices=[(90, 'open'), (80, 'test'), (10, 'locked')], default=90)),
                ('project_notes', models.TextField(blank=True)),
                ('contact_link', models.CharField(max_length=255)),
                ('tags', models.JSONField(blank=True, null=True)),
                ('site_id', models.UUIDField()),
                ('site_name', models.CharField(max_length=255)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('site_notes', models.TextField(blank=True)),
                ('country_id', models.UUIDField()),
                ('country_name', models.CharField(max_length=50)),
                ('reef_type', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_zone', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_exposure', models.CharField(blank=True, max_length=50, null=True)),
                ('management_id', models.UUIDField()),
                ('management_name', models.CharField(max_length=255)),
                ('management_name_secondary', models.CharField(blank=True, max_length=255, null=True)),
                ('management_est_year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('management_size', models.DecimalField(blank=True, decimal_places=3, max_digits=12, null=True, verbose_name='Size (ha)')),
                ('management_parties', models.JSONField(blank=True, null=True)),
                ('management_compliance', models.CharField(blank=True, max_length=100, null=True)),
                ('management_rules', models.JSONField(blank=True, null=True)),
                ('management_notes', models.TextField(blank=True)),
                ('sample_date', models.DateField()),
                ('sample_event_id', models.UUIDField()),
                ('sample_event_notes', models.TextField(blank=True)),
                ('covariates', models.JSONField(blank=True, null=True)),
                ('sample_unit_count', models.PositiveSmallIntegerField()),
                ('depth_avg', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='depth (m)')),
                ('current_name', models.CharField(blank=True, max_length=100, null=True)),
                ('tide_name', models.CharField(blank=True, max_length=100, null=True)),
                ('visibility_name', models.CharField(blank=True, max_length=100, null=True)),
                ('percent_cover_by_benthic_category_avg', models.JSONField(blank=True, null=True)),
                ('data_policy_benthicpit', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'summary_benthicpit_se',
            },
        ),
        migrations.CreateModel(
            name='BenthicPITSUModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('project_id', models.UUIDField()),
                ('project_name', models.CharField(max_length=255)),
                ('project_status', models.PositiveSmallIntegerField(choices=[(90, 'open'), (80, 'test'), (10, 'locked')], default=90)),
                ('project_notes', models.TextField(blank=True)),
                ('contact_link', models.CharField(max_length=255)),
                ('tags', models.JSONField(blank=True, null=True)),
                ('site_id', models.UUIDField()),
                ('site_name', models.CharField(max_length=255)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('site_notes', models.TextField(blank=True)),
                ('country_id', models.UUIDField()),
                ('country_name', models.CharField(max_length=50)),
                ('reef_type', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_zone', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_exposure', models.CharField(blank=True, max_length=50, null=True)),
                ('management_id', models.UUIDField()),
                ('management_name', models.CharField(max_length=255)),
                ('management_name_secondary', models.CharField(blank=True, max_length=255, null=True)),
                ('management_est_year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('management_size', models.DecimalField(blank=True, decimal_places=3, max_digits=12, null=True, verbose_name='Size (ha)')),
                ('management_parties', models.JSONField(blank=True, null=True)),
                ('management_compliance', models.CharField(blank=True, max_length=100, null=True)),
                ('management_rules', models.JSONField(blank=True, null=True)),
                ('management_notes', models.TextField(blank=True)),
                ('sample_date', models.DateField()),
                ('sample_event_id', models.UUIDField()),
                ('sample_event_notes', models.TextField(blank=True)),
                ('covariates', models.JSONField(blank=True, null=True)),
                ('label', models.CharField(blank=True, max_length=50)),
                ('relative_depth', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_time', models.TimeField(blank=True, null=True)),
                ('observers', models.JSONField(blank=True, null=True)),
                ('current_name', models.CharField(blank=True, max_length=50, null=True)),
                ('tide_name', models.CharField(blank=True, max_length=50, null=True)),
                ('visibility_name', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_unit_notes', models.TextField(blank=True)),
                ('depth', models.DecimalField(decimal_places=1, max_digits=3, verbose_name='depth (m)')),
                ('sample_unit_ids', models.JSONField()),
                ('transect_number', models.PositiveSmallIntegerField()),
                ('transect_len_surveyed', models.PositiveSmallIntegerField(verbose_name='transect length surveyed (m)')),
                ('reef_slope', models.CharField(blank=True, max_length=50, null=True)),
                ('interval_size', models.DecimalField(decimal_places=2, default=0.5, max_digits=4, verbose_name='interval size (m)')),
                ('interval_start', models.DecimalField(decimal_places=2, default=0.5, max_digits=4, verbose_name='interval start (m)')),
                ('percent_cover_by_benthic_category', models.JSONField(blank=True, null=True)),
                ('data_policy_benthicpit', models.CharField(max_length=50)),
                ('pseudosu_id', models.UUIDField()),
            ],
            options={
                'db_table': 'summary_benthicpit_su',
            },
        ),
        migrations.CreateModel(
            name='BleachingQCColoniesBleachedObsModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('project_id', models.UUIDField()),
                ('project_name', models.CharField(max_length=255)),
                ('project_status', models.PositiveSmallIntegerField(choices=[(90, 'open'), (80, 'test'), (10, 'locked')], default=90)),
                ('project_notes', models.TextField(blank=True)),
                ('contact_link', models.CharField(max_length=255)),
                ('tags', models.JSONField(blank=True, null=True)),
                ('site_id', models.UUIDField()),
                ('site_name', models.CharField(max_length=255)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('site_notes', models.TextField(blank=True)),
                ('country_id', models.UUIDField()),
                ('country_name', models.CharField(max_length=50)),
                ('reef_type', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_zone', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_exposure', models.CharField(blank=True, max_length=50, null=True)),
                ('management_id', models.UUIDField()),
                ('management_name', models.CharField(max_length=255)),
                ('management_name_secondary', models.CharField(blank=True, max_length=255, null=True)),
                ('management_est_year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('management_size', models.DecimalField(blank=True, decimal_places=3, max_digits=12, null=True, verbose_name='Size (ha)')),
                ('management_parties', models.JSONField(blank=True, null=True)),
                ('management_compliance', models.CharField(blank=True, max_length=100, null=True)),
                ('management_rules', models.JSONField(blank=True, null=True)),
                ('management_notes', models.TextField(blank=True)),
                ('sample_date', models.DateField()),
                ('sample_event_id', models.UUIDField()),
                ('sample_event_notes', models.TextField(blank=True)),
                ('covariates', models.JSONField(blank=True, null=True)),
                ('label', models.CharField(blank=True, max_length=50)),
                ('relative_depth', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_time', models.TimeField(blank=True, null=True)),
                ('observers', models.JSONField(blank=True, null=True)),
                ('current_name', models.CharField(blank=True, max_length=50, null=True)),
                ('tide_name', models.CharField(blank=True, max_length=50, null=True)),
                ('visibility_name', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_unit_notes', models.TextField(blank=True)),
                ('depth', models.DecimalField(decimal_places=1, max_digits=3, verbose_name='depth (m)')),
                ('sample_unit_id', models.UUIDField()),
                ('quadrat_size', models.DecimalField(decimal_places=2, max_digits=6)),
                ('benthic_attribute', models.CharField(blank=True, max_length=100, null=True)),
                ('growth_form', models.CharField(blank=True, max_length=100, null=True)),
                ('count_normal', models.PositiveSmallIntegerField(default=0, verbose_name='normal')),
                ('count_pale', models.PositiveSmallIntegerField(default=0, verbose_name='pale')),
                ('count_20', models.PositiveSmallIntegerField(default=0, verbose_name='0-20% bleached')),
                ('count_50', models.PositiveSmallIntegerField(default=0, verbose_name='20-50% bleached')),
                ('count_80', models.PositiveSmallIntegerField(default=0, verbose_name='50-80% bleached')),
                ('count_100', models.PositiveSmallIntegerField(default=0, verbose_name='80-100% bleached')),
                ('count_dead', models.PositiveSmallIntegerField(default=0, verbose_name='recently dead')),
                ('observation_notes', models.TextField(blank=True)),
                ('data_policy_bleachingqc', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'summary_bleachingqc_colonies_bleached_obs',
            },
        ),
        migrations.CreateModel(
            name='BleachingQCQuadratBenthicPercentObsModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('project_id', models.UUIDField()),
                ('project_name', models.CharField(max_length=255)),
                ('project_status', models.PositiveSmallIntegerField(choices=[(90, 'open'), (80, 'test'), (10, 'locked')], default=90)),
                ('project_notes', models.TextField(blank=True)),
                ('contact_link', models.CharField(max_length=255)),
                ('tags', models.JSONField(blank=True, null=True)),
                ('site_id', models.UUIDField()),
                ('site_name', models.CharField(max_length=255)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('site_notes', models.TextField(blank=True)),
                ('country_id', models.UUIDField()),
                ('country_name', models.CharField(max_length=50)),
                ('reef_type', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_zone', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_exposure', models.CharField(blank=True, max_length=50, null=True)),
                ('management_id', models.UUIDField()),
                ('management_name', models.CharField(max_length=255)),
                ('management_name_secondary', models.CharField(blank=True, max_length=255, null=True)),
                ('management_est_year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('management_size', models.DecimalField(blank=True, decimal_places=3, max_digits=12, null=True, verbose_name='Size (ha)')),
                ('management_parties', models.JSONField(blank=True, null=True)),
                ('management_compliance', models.CharField(blank=True, max_length=100, null=True)),
                ('management_rules', models.JSONField(blank=True, null=True)),
                ('management_notes', models.TextField(blank=True)),
                ('sample_date', models.DateField()),
                ('sample_event_id', models.UUIDField()),
                ('sample_event_notes', models.TextField(blank=True)),
                ('covariates', models.JSONField(blank=True, null=True)),
                ('label', models.CharField(blank=True, max_length=50)),
                ('relative_depth', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_time', models.TimeField(blank=True, null=True)),
                ('observers', models.JSONField(blank=True, null=True)),
                ('current_name', models.CharField(blank=True, max_length=50, null=True)),
                ('tide_name', models.CharField(blank=True, max_length=50, null=True)),
                ('visibility_name', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_unit_notes', models.TextField(blank=True)),
                ('depth', models.DecimalField(decimal_places=1, max_digits=3, verbose_name='depth (m)')),
                ('sample_unit_id', models.UUIDField()),
                ('quadrat_size', models.DecimalField(decimal_places=2, max_digits=6)),
                ('quadrat_number', models.PositiveSmallIntegerField(verbose_name='quadrat number')),
                ('percent_hard', models.PositiveSmallIntegerField(default=0, verbose_name='hard coral, % cover')),
                ('percent_soft', models.PositiveSmallIntegerField(default=0, verbose_name='soft coral, % cover')),
                ('percent_algae', models.PositiveSmallIntegerField(default=0, verbose_name='macroalgae, % cover')),
                ('observation_notes', models.TextField(blank=True)),
                ('data_policy_bleachingqc', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'summary_bleachingqc_quadrat_benthic_percent_obs',
            },
        ),
        migrations.CreateModel(
            name='BleachingQCSEModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('project_id', models.UUIDField()),
                ('project_name', models.CharField(max_length=255)),
                ('project_status', models.PositiveSmallIntegerField(choices=[(90, 'open'), (80, 'test'), (10, 'locked')], default=90)),
                ('project_notes', models.TextField(blank=True)),
                ('contact_link', models.CharField(max_length=255)),
                ('tags', models.JSONField(blank=True, null=True)),
                ('site_id', models.UUIDField()),
                ('site_name', models.CharField(max_length=255)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('site_notes', models.TextField(blank=True)),
                ('country_id', models.UUIDField()),
                ('country_name', models.CharField(max_length=50)),
                ('reef_type', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_zone', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_exposure', models.CharField(blank=True, max_length=50, null=True)),
                ('management_id', models.UUIDField()),
                ('management_name', models.CharField(max_length=255)),
                ('management_name_secondary', models.CharField(blank=True, max_length=255, null=True)),
                ('management_est_year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('management_size', models.DecimalField(blank=True, decimal_places=3, max_digits=12, null=True, verbose_name='Size (ha)')),
                ('management_parties', models.JSONField(blank=True, null=True)),
                ('management_compliance', models.CharField(blank=True, max_length=100, null=True)),
                ('management_rules', models.JSONField(blank=True, null=True)),
                ('management_notes', models.TextField(blank=True)),
                ('sample_date', models.DateField()),
                ('sample_event_id', models.UUIDField()),
                ('sample_event_notes', models.TextField(blank=True)),
                ('covariates', models.JSONField(blank=True, null=True)),
                ('sample_unit_count', models.PositiveSmallIntegerField()),
                ('depth_avg', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='depth (m)')),
                ('current_name', models.CharField(blank=True, max_length=100, null=True)),
                ('tide_name', models.CharField(blank=True, max_length=100, null=True)),
                ('visibility_name', models.CharField(blank=True, max_length=100, null=True)),
                ('quadrat_size_avg', models.DecimalField(decimal_places=2, max_digits=6)),
                ('count_total_avg', models.DecimalField(decimal_places=1, max_digits=5)),
                ('count_genera_avg', models.DecimalField(decimal_places=1, max_digits=4)),
                ('percent_normal_avg', models.DecimalField(decimal_places=1, max_digits=4)),
                ('percent_pale_avg', models.DecimalField(decimal_places=1, max_digits=4)),
                ('percent_bleached_avg', models.DecimalField(decimal_places=1, max_digits=4)),
                ('quadrat_count_avg', models.DecimalField(decimal_places=1, max_digits=4)),
                ('percent_hard_avg_avg', models.DecimalField(decimal_places=1, max_digits=4)),
                ('percent_soft_avg_avg', models.DecimalField(decimal_places=1, max_digits=4)),
                ('percent_algae_avg_avg', models.DecimalField(decimal_places=1, max_digits=4)),
                ('data_policy_bleachingqc', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'summary_bleachingqc_se',
            },
        ),
        migrations.CreateModel(
            name='BleachingQCSUModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('project_id', models.UUIDField()),
                ('project_name', models.CharField(max_length=255)),
                ('project_status', models.PositiveSmallIntegerField(choices=[(90, 'open'), (80, 'test'), (10, 'locked')], default=90)),
                ('project_notes', models.TextField(blank=True)),
                ('contact_link', models.CharField(max_length=255)),
                ('tags', models.JSONField(blank=True, null=True)),
                ('site_id', models.UUIDField()),
                ('site_name', models.CharField(max_length=255)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('site_notes', models.TextField(blank=True)),
                ('country_id', models.UUIDField()),
                ('country_name', models.CharField(max_length=50)),
                ('reef_type', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_zone', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_exposure', models.CharField(blank=True, max_length=50, null=True)),
                ('management_id', models.UUIDField()),
                ('management_name', models.CharField(max_length=255)),
                ('management_name_secondary', models.CharField(blank=True, max_length=255, null=True)),
                ('management_est_year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('management_size', models.DecimalField(blank=True, decimal_places=3, max_digits=12, null=True, verbose_name='Size (ha)')),
                ('management_parties', models.JSONField(blank=True, null=True)),
                ('management_compliance', models.CharField(blank=True, max_length=100, null=True)),
                ('management_rules', models.JSONField(blank=True, null=True)),
                ('management_notes', models.TextField(blank=True)),
                ('sample_date', models.DateField()),
                ('sample_event_id', models.UUIDField()),
                ('sample_event_notes', models.TextField(blank=True)),
                ('covariates', models.JSONField(blank=True, null=True)),
                ('label', models.CharField(blank=True, max_length=50)),
                ('relative_depth', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_time', models.TimeField(blank=True, null=True)),
                ('observers', models.JSONField(blank=True, null=True)),
                ('current_name', models.CharField(blank=True, max_length=50, null=True)),
                ('tide_name', models.CharField(blank=True, max_length=50, null=True)),
                ('visibility_name', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_unit_notes', models.TextField(blank=True)),
                ('depth', models.DecimalField(decimal_places=1, max_digits=3, verbose_name='depth (m)')),
                ('sample_unit_ids', models.JSONField()),
                ('quadrat_size', models.DecimalField(decimal_places=2, max_digits=6)),
                ('count_genera', models.PositiveSmallIntegerField(default=0)),
                ('count_total', models.PositiveSmallIntegerField(default=0)),
                ('percent_normal', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('percent_pale', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('percent_bleached', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('quadrat_count', models.PositiveSmallIntegerField(default=0)),
                ('percent_hard_avg', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('percent_soft_avg', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('percent_algae_avg', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('data_policy_bleachingqc', models.CharField(max_length=50)),
                ('pseudosu_id', models.UUIDField()),
            ],
            options={
                'db_table': 'summary_bleachingqc_su',
            },
        ),
        migrations.CreateModel(
            name='HabitatComplexityObsModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('project_id', models.UUIDField()),
                ('project_name', models.CharField(max_length=255)),
                ('project_status', models.PositiveSmallIntegerField(choices=[(90, 'open'), (80, 'test'), (10, 'locked')], default=90)),
                ('project_notes', models.TextField(blank=True)),
                ('contact_link', models.CharField(max_length=255)),
                ('tags', models.JSONField(blank=True, null=True)),
                ('site_id', models.UUIDField()),
                ('site_name', models.CharField(max_length=255)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('site_notes', models.TextField(blank=True)),
                ('country_id', models.UUIDField()),
                ('country_name', models.CharField(max_length=50)),
                ('reef_type', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_zone', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_exposure', models.CharField(blank=True, max_length=50, null=True)),
                ('management_id', models.UUIDField()),
                ('management_name', models.CharField(max_length=255)),
                ('management_name_secondary', models.CharField(blank=True, max_length=255, null=True)),
                ('management_est_year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('management_size', models.DecimalField(blank=True, decimal_places=3, max_digits=12, null=True, verbose_name='Size (ha)')),
                ('management_parties', models.JSONField(blank=True, null=True)),
                ('management_compliance', models.CharField(blank=True, max_length=100, null=True)),
                ('management_rules', models.JSONField(blank=True, null=True)),
                ('management_notes', models.TextField(blank=True)),
                ('sample_date', models.DateField()),
                ('sample_event_id', models.UUIDField()),
                ('sample_event_notes', models.TextField(blank=True)),
                ('covariates', models.JSONField(blank=True, null=True)),
                ('label', models.CharField(blank=True, max_length=50)),
                ('relative_depth', models.CharField(blank=True, max_length=50, null=True)),
                ('observers', models.JSONField(blank=True, null=True)),
                ('current_name', models.CharField(blank=True, max_length=50, null=True)),
                ('tide_name', models.CharField(blank=True, max_length=50, null=True)),
                ('visibility_name', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_unit_notes', models.TextField(blank=True)),
                ('depth', models.DecimalField(decimal_places=1, max_digits=3, verbose_name='depth (m)')),
                ('sample_unit_id', models.UUIDField()),
                ('sample_time', models.TimeField(blank=True, null=True)),
                ('transect_number', models.PositiveSmallIntegerField()),
                ('transect_len_surveyed', models.PositiveSmallIntegerField(verbose_name='transect length surveyed (m)')),
                ('reef_slope', models.CharField(blank=True, max_length=50, null=True)),
                ('interval_size', models.DecimalField(decimal_places=2, default=0.5, max_digits=4, verbose_name='interval size (m)')),
                ('interval', models.DecimalField(decimal_places=2, max_digits=7)),
                ('observation_notes', models.TextField(blank=True)),
                ('score', models.PositiveSmallIntegerField()),
                ('score_name', models.CharField(blank=True, max_length=100, null=True)),
                ('data_policy_habitatcomplexity', models.CharField(max_length=50)),
                ('pseudosu_id', models.UUIDField()),
            ],
            options={
                'db_table': 'summary_habitatcomplexity_obs',
            },
        ),
        migrations.CreateModel(
            name='HabitatComplexitySEModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('project_id', models.UUIDField()),
                ('project_name', models.CharField(max_length=255)),
                ('project_status', models.PositiveSmallIntegerField(choices=[(90, 'open'), (80, 'test'), (10, 'locked')], default=90)),
                ('project_notes', models.TextField(blank=True)),
                ('contact_link', models.CharField(max_length=255)),
                ('tags', models.JSONField(blank=True, null=True)),
                ('site_id', models.UUIDField()),
                ('site_name', models.CharField(max_length=255)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('site_notes', models.TextField(blank=True)),
                ('country_id', models.UUIDField()),
                ('country_name', models.CharField(max_length=50)),
                ('reef_type', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_zone', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_exposure', models.CharField(blank=True, max_length=50, null=True)),
                ('management_id', models.UUIDField()),
                ('management_name', models.CharField(max_length=255)),
                ('management_name_secondary', models.CharField(blank=True, max_length=255, null=True)),
                ('management_est_year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('management_size', models.DecimalField(blank=True, decimal_places=3, max_digits=12, null=True, verbose_name='Size (ha)')),
                ('management_parties', models.JSONField(blank=True, null=True)),
                ('management_compliance', models.CharField(blank=True, max_length=100, null=True)),
                ('management_rules', models.JSONField(blank=True, null=True)),
                ('management_notes', models.TextField(blank=True)),
                ('sample_date', models.DateField()),
                ('sample_event_id', models.UUIDField()),
                ('sample_event_notes', models.TextField(blank=True)),
                ('covariates', models.JSONField(blank=True, null=True)),
                ('sample_unit_count', models.PositiveSmallIntegerField()),
                ('depth_avg', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='depth (m)')),
                ('current_name', models.CharField(blank=True, max_length=100, null=True)),
                ('tide_name', models.CharField(blank=True, max_length=100, null=True)),
                ('visibility_name', models.CharField(blank=True, max_length=100, null=True)),
                ('score_avg_avg', models.DecimalField(decimal_places=2, max_digits=3)),
                ('data_policy_habitatcomplexity', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'summary_habitatcomplexity_se',
            },
        ),
        migrations.CreateModel(
            name='HabitatComplexitySUModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('project_id', models.UUIDField()),
                ('project_name', models.CharField(max_length=255)),
                ('project_status', models.PositiveSmallIntegerField(choices=[(90, 'open'), (80, 'test'), (10, 'locked')], default=90)),
                ('project_notes', models.TextField(blank=True)),
                ('contact_link', models.CharField(max_length=255)),
                ('tags', models.JSONField(blank=True, null=True)),
                ('site_id', models.UUIDField()),
                ('site_name', models.CharField(max_length=255)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('site_notes', models.TextField(blank=True)),
                ('country_id', models.UUIDField()),
                ('country_name', models.CharField(max_length=50)),
                ('reef_type', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_zone', models.CharField(blank=True, max_length=50, null=True)),
                ('reef_exposure', models.CharField(blank=True, max_length=50, null=True)),
                ('management_id', models.UUIDField()),
                ('management_name', models.CharField(max_length=255)),
                ('management_name_secondary', models.CharField(blank=True, max_length=255, null=True)),
                ('management_est_year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('management_size', models.DecimalField(blank=True, decimal_places=3, max_digits=12, null=True, verbose_name='Size (ha)')),
                ('management_parties', models.JSONField(blank=True, null=True)),
                ('management_compliance', models.CharField(blank=True, max_length=100, null=True)),
                ('management_rules', models.JSONField(blank=True, null=True)),
                ('management_notes', models.TextField(blank=True)),
                ('sample_date', models.DateField()),
                ('sample_event_id', models.UUIDField()),
                ('sample_event_notes', models.TextField(blank=True)),
                ('covariates', models.JSONField(blank=True, null=True)),
                ('label', models.CharField(blank=True, max_length=50)),
                ('relative_depth', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_time', models.TimeField(blank=True, null=True)),
                ('observers', models.JSONField(blank=True, null=True)),
                ('current_name', models.CharField(blank=True, max_length=50, null=True)),
                ('tide_name', models.CharField(blank=True, max_length=50, null=True)),
                ('visibility_name', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_unit_notes', models.TextField(blank=True)),
                ('depth', models.DecimalField(decimal_places=1, max_digits=3, verbose_name='depth (m)')),
                ('sample_unit_ids', models.JSONField()),
                ('transect_number', models.PositiveSmallIntegerField()),
                ('transect_len_surveyed', models.PositiveSmallIntegerField(verbose_name='transect length surveyed (m)')),
                ('reef_slope', models.CharField(blank=True, max_length=50, null=True)),
                ('score_avg', models.DecimalField(decimal_places=2, max_digits=3)),
                ('data_policy_habitatcomplexity', models.CharField(max_length=50)),
                ('pseudosu_id', models.UUIDField()),
            ],
            options={
                'db_table': 'summary_habitatcomplexity_su',
            },
        ),
    ]
