# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-05-09 21:00
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0003_auto_20190503_2212'),
    ]

    operations = [
        migrations.CreateModel(
            name='BleachingQuadratCollection',
            fields=[
                ('transectmethod_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.TransectMethod')),
            ],
            options={
                'db_table': 'transectmethod_bleaching_quadrat_collection',
                'verbose_name': 'bleaching quadrat collection',
                'verbose_name_plural': 'bleaching quadrat collection observations',
            },
            bases=('api.transectmethod',),
        ),
        migrations.CreateModel(
            name='ObsColoniesBleached',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('count_normal', models.PositiveSmallIntegerField(default=0, verbose_name='normal')),
                ('count_pale', models.PositiveSmallIntegerField(default=0, verbose_name='pale')),
                ('count_20', models.PositiveSmallIntegerField(default=0, verbose_name='0-20% bleached')),
                ('count_50', models.PositiveSmallIntegerField(default=0, verbose_name='20-50% bleached')),
                ('count_80', models.PositiveSmallIntegerField(default=0, verbose_name='50-80% bleached')),
                ('count_100', models.PositiveSmallIntegerField(default=0, verbose_name='80-100% bleached')),
                ('count_dead', models.PositiveSmallIntegerField(default=0, verbose_name='recently dead')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.BenthicAttribute')),
                ('bleachingquadratcollection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.BleachingQuadratCollection')),
                ('growth_form', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.GrowthForm')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='obscoloniesbleached_updated_by', to='api.Profile')),
            ],
            options={
                'db_table': 'obs_colonies_bleached',
                'verbose_name': 'bleaching quadrat collection colonies bleached observation',
            },
        ),
        migrations.CreateModel(
            name='ObsQuadratBenthicPercent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('quadrat_number', models.PositiveSmallIntegerField(verbose_name='quadrat number')),
                ('percent_hard', models.PositiveSmallIntegerField(default=0, verbose_name='hard coral, % cover')),
                ('percent_soft', models.PositiveSmallIntegerField(default=0, verbose_name='soft coral, % cover')),
                ('percent_algae', models.PositiveSmallIntegerField(default=0, verbose_name='macroalgae, % cover')),
                ('bleachingquadratcollection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.BleachingQuadratCollection')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='obsquadratbenthicpercent_updated_by', to='api.Profile')),
            ],
            options={
                'db_table': 'obs_quadrat_benthic_percent',
                'verbose_name': 'bleaching quadrat collection percent benthic cover observation',
            },
        ),
        migrations.CreateModel(
            name='QuadratCollection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
                ('quadrat_size', models.DecimalField(decimal_places=2, default=1, max_digits=6, validators=[django.core.validators.MinValueValidator(0)], verbose_name='single quadrat area (m2)')),
                ('label', models.CharField(blank=True, max_length=50)),
                ('sample_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.SampleEvent')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quadratcollection_updated_by', to='api.Profile')),
            ],
            options={
                'db_table': 'quadrat_collection',
            },
        ),
        migrations.AddField(
            model_name='project',
            name='data_policy_bleachingqc',
            field=models.PositiveSmallIntegerField(choices=[(10, 'private'), (50, 'public summary'), (100, 'public')], default=50),
        ),
        migrations.AddField(
            model_name='bleachingquadratcollection',
            name='quadrat',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bleaching_quadrat_collection', to='api.QuadratCollection', verbose_name='bleaching quadrat collection'),
        ),
        migrations.AlterUniqueTogether(
            name='obsquadratbenthicpercent',
            unique_together=set([('bleachingquadratcollection', 'quadrat_number')]),
        ),
    ]
